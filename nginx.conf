worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    sendfile on;

    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    keepalive_timeout   70;

    ssl_certificate     opex.dev.crt;
    ssl_certificate_key private.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    upstream docker-wallet {
        server wallet:8080;
    }

    upstream docker-auth {
        server auth:8080;
    }

    upstream docker-matching-gateway {
        server matching-gateway:8080;
    }

    upstream docker-api {
        server api:8080;
    }

    upstream docker-storage {
        server storage:8080;
    }

    upstream docker-websocket {
        server websocket:8080;
    }

    upstream docker-admin {
        server admin:8080;
    }

    upstream docker-web-app {
        server app:80;
    }

    upstream docker-ipg {
        server payment:8080;
    }

    upstream docker-referral {
        server referral:8080;
    }

    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;

    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name demo.opex.dev;
        server_name demo.opex.dev:8443;

        location ^~ /auth {
            resolver 127.0.0.11;
            set $backend http://docker-auth;
            proxy_pass $backend;
        }

        location ~* \.(.*)$ {
            resolver 127.0.0.11;
            set $backend http://docker-web-app;
            proxy_pass $backend;
        }

        location / {
            resolver 127.0.0.11;
            set $backend http://docker-web-app;
            proxy_pass $backend;
            rewrite .* / break;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name api.opex.dev;
        server_name api.opex.dev:8443;

        more_set_headers 'Access-Control-Allow-Origin: *';
        more_set_headers 'Access-Control-Allow-Headers: *';
        more_set_headers 'Access-Control-Allow-Methods: POST, PUT, PATCH, GET, DELETE, OPTIONS, HEAD';

        if ($request_method = 'OPTIONS') {
            return 204;
        }

        location /auth {
            resolver 127.0.0.11;
            set $backend http://docker-auth;
            proxy_pass $backend;
        }

        location /wallet/transfer {
            return 403;
        }

        location /wallet/deposit {
            return 403;
        }

        location /wallet/payment/internal {
            return 403;
        }

        location /wallet {
            resolver 127.0.0.11;
            set $backend http://docker-wallet;
            proxy_pass $backend;
            rewrite ^/wallet/(.*)$ /$1 break;
        }

        location /gateway {
            resolver 127.0.0.11;
            set $backend http://docker-matching-gateway;
            proxy_pass $backend;
            rewrite ^/gateway/(.*)$ /$1 break;
        }

        location /storage {
            resolver 127.0.0.11;
            set $backend http://docker-storage;
            proxy_pass $backend;
            rewrite ^/storage/(.*)$ /$1 break;
        }

        location /referral {
            resolver 127.0.0.11;
            set $backend http://docker-referral;
            proxy_pass $backend;
            rewrite ^/referral/(.*)$ /$1 break;
        }

        location /stream {
            resolver 127.0.0.11;
            set $backend http://docker-websocket;
            proxy_pass $backend;
            # WS config
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection  "upgrade";
            ###########
            rewrite ^/stream/(.*)$ /$1 break;
        }

        location /ipg {
            resolver 127.0.0.11;
            set $backend http://docker-ipg;
            proxy_pass $backend;
            rewrite ^/ipg/(.*)$ /$1 break;
        }

        location /admin {
            resolver 127.0.0.11;
            set $backend http://docker-admin;
            proxy_pass $backend;
            rewrite ^/admin/(.*)$ /$1 break;
        }

        location /api {
            resolver 127.0.0.11;
            set $backend http://docker-api;
            proxy_pass $backend;
            rewrite ^/api/(.*)$ /$1 break;
        }

        location /sapi {
            resolver 127.0.0.11;
            set $backend http://docker-api;
            proxy_pass $backend;
            rewrite ^/sapi/(.*)$ /$1 break;
        }

        location /binance {
            resolver 127.0.0.11;
            proxy_set_header Host api.binance.com;
            proxy_set_header X-Real-IP '';
            proxy_set_header X-Forwarded-For '';
            proxy_set_header X-Forwarded-Host '';
            set $backend https://api.binance.com;
            proxy_pass $backend;
            rewrite ^/binance/(.*)$ /$1 break;
        }
    }
}
